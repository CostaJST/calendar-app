PARSER_BEGIN(CalenderEventParser)

import jdk.nashorn.internal.parser.Token;import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;

public class CalenderEventParser {

    public static ArrayList<CalenderEvent> parse(String fileName) throws IOException, ParseException {
        CalenderEventParser calenderEventParser = new CalenderEventParser(new FileInputStream(fileName));
        ArrayList<CalenderEvent> calEvents = CalenderEventParser.dsl();
        for (Calender event : calEvents) {
            System.out.println(event);
        }

        return calEvents;
    }

    public static void main(String[] args) {
        if(args.length != 1) {
            System.out.println("Please specify one file name");
            return;
        }

        try {
            parse(args[0]);
        } catch (Exception e) {
            System.out.println("Invalid format");
        }
    }
}

PARSER_END(CalenderEventParser)

SKIP : {
    " " | "\n" | "\r" | "\t"
}

//Tokens
TOKEN : {
    < CalenderEvent: "event" > |
    < TITLE: "\" (~["\""])* "\"" > |
    < START_DATE: (["0" - "9"])+ "/" (["0" - "9"])+ "/" (["0" - "9"])+ > |
    < START_TIME: (["0" - "9"])+":"(["0" - "9"])+ > |
    < DURATION: (["0" - "9"])+ >
}

//BNF parser section
ArrayList<CalenderEvent> dsl() :
{
    CalenderEvent calenderEvent;
    ArrayList<CalenderEvent> calEvents = new ArrayList<>();
    Token title;
    Token startDate;
    Token startTime;
    Token duration;
}

{
    (
        <CalenderEvent> <TITLE>
        <START_DATE>
        <START_TIME>
        <DURATION>
    )*
    <EOF>
}
